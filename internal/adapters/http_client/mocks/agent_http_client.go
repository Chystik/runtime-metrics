// Code generated by mockery v2.23.4. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/Chystik/runtime-metrics/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// AgentHTTPClient is an autogenerated mock type for the AgentHTTPClient type
type AgentHTTPClient struct {
	mock.Mock
}

// ReportMetrics provides a mock function with given fields: metrics
func (_m *AgentHTTPClient) ReportMetrics(metrics map[string]interface{}) error {
	ret := _m.Called(metrics)

	var r0 error
	if rf, ok := ret.Get(0).(func(map[string]interface{}) error); ok {
		r0 = rf(metrics)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReportMetricsJSON provides a mock function with given fields: metrics
func (_m *AgentHTTPClient) ReportMetricsJSON(metrics map[string]models.Metric) error {
	ret := _m.Called(metrics)

	var r0 error
	if rf, ok := ret.Get(0).(func(map[string]models.Metric) error); ok {
		r0 = rf(metrics)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReportMetricsJSONBatch provides a mock function with given fields: ctx, metrics
func (_m *AgentHTTPClient) ReportMetricsJSONBatch(ctx context.Context, metrics map[string]models.Metric) error {
	ret := _m.Called(ctx, metrics)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]models.Metric) error); ok {
		r0 = rf(ctx, metrics)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAgentHTTPClient creates a new instance of AgentHTTPClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAgentHTTPClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *AgentHTTPClient {
	mock := &AgentHTTPClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
